{"ast":null,"code":"import _classCallCheck from \"/Users/Sammy/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Sammy/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Sammy/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Sammy/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Sammy/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/Sammy/my-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/Sammy/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport Header from './components/Header';\nimport './App.css';\nimport _ from 'lodash';\nimport { Line, Chart } from 'react-chartjs-2';\nimport moment from 'moment';\nimport currencies from './supported-currencies.json';\nconsole.log(currencies);\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props)); // chart.js defaults\n\n    Chart.defaults.global.defaultFontColor = '#000';\n    Chart.defaults.global.defaultFontSize = 16;\n    _this.state = {\n      historicalData: null,\n      currency: \"PHP\"\n    };\n    _this.onCurrencySelect = _this.onCurrencySelect.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getBitcoinData();\n    }\n  }, {\n    key: \"getBitcoinData\",\n    value: function getBitcoinData() {\n      var _this2 = this;\n\n      fetch(\"https://api.coindesk.com/v1/bpi/historical/close.json?currency=\".concat(this.state.currency)).then(function (response) {\n        return response.json();\n      }).then(function (historicalData) {\n        return _this2.setState({\n          historicalData: historicalData\n        });\n      }).catch(function (e) {\n        return e;\n      });\n    }\n  }, {\n    key: \"formatChartData\",\n    value: function formatChartData() {\n      var bpi = this.state.historicalData.bpi;\n      return {\n        labels: _.map(_.keys(bpi), function (date) {\n          return moment(date).format(\"ll\");\n        }),\n        datasets: [{\n          label: \"Bitcoin\",\n          fill: true,\n          lineTension: 0.1,\n          backgroundColor: 'rgba(75,192,192,0.4)',\n          borderColor: 'rgba(75,192,192,1)',\n          borderCapStyle: 'butt',\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: 'miter',\n          pointBorderColor: 'rgba(75,192,192,1)',\n          pointBackgroundColor: '#fff',\n          pointBorderWidth: 1,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n          pointHoverBorderColor: 'rgba(220,220,220,1)',\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: _.values(bpi)\n        }]\n      };\n    }\n  }, {\n    key: \"setCurrency\",\n    value: function setCurrency(currency) {\n      this.setState({\n        currency: currency\n      }, this.getBitcoinData);\n    }\n  }, {\n    key: \"onCurrencySelect\",\n    value: function onCurrencySelect(e) {\n      this.setCurrency(e.target.value);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.historicalData) {\n        return React.createElement(\"div\", {\n          className: \"app\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(Header, {\n          title: \"BITCOIN PRICE INDEX\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"select-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          style: {\n            fontSize: 18,\n            fontFamily: 'Bungee'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \" Select your currency: \"), React.createElement(\"select\", {\n          value: this.state.currency,\n          onChange: this.onCurrencySelect,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, currencies.map(function (obj, index) {\n          return React.createElement(\"option\", {\n            key: \"\".concat(index, \"-\").concat(obj.country),\n            value: obj.currency,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          }, \" \", obj.currency, \" \");\n        })), this.state.currency !== 'PHP' && React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"#\",\n          className: \"link\",\n          onClick: function onClick() {\n            return _this3.setCurrency('PHP');\n          },\n          style: {\n            color: \"black\",\n            fontSize: 16,\n            fontFamily: 'Bungee'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, \" [CLICK HERE TO RESET] \"))), React.createElement(\"div\", {\n          style: {\n            marginTop: 10\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(Line, {\n          data: this.formatChartData(),\n          height: 250,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        })));\n      }\n\n      return null;\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/Sammy/my-app/src/App.js"],"names":["React","Component","Header","_","Line","Chart","moment","currencies","console","log","App","props","defaults","global","defaultFontColor","defaultFontSize","state","historicalData","currency","onCurrencySelect","bind","getBitcoinData","fetch","then","response","json","setState","catch","e","bpi","labels","map","keys","date","format","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","values","setCurrency","target","value","fontSize","fontFamily","obj","index","country","color","marginTop","formatChartData"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAO,WAAP;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,iBAA5B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AAEAC,OAAO,CAACC,GAAR,CAAYF,UAAZ;;IAEMG,G;;;;;AACJ,eAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAClB,6EAAMA,KAAN,GADkB,CAGlB;;AACAN,IAAAA,KAAK,CAACO,QAAN,CAAeC,MAAf,CAAsBC,gBAAtB,GAAyC,MAAzC;AACAT,IAAAA,KAAK,CAACO,QAAN,CAAeC,MAAf,CAAsBE,eAAtB,GAAwC,EAAxC;AAEA,UAAKC,KAAL,GAAa;AAACC,MAAAA,cAAc,EAAE,IAAjB;AAAuBC,MAAAA,QAAQ,EAAE;AAAjC,KAAb;AACA,UAAKC,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBC,IAAtB,uDAAxB;AARkB;AASnB;;;;wCAEoB;AACnB,WAAKC,cAAL;AACD;;;qCAEiB;AAAA;;AAChBC,MAAAA,KAAK,0EAAmE,KAAKN,KAAL,CAAWE,QAA9E,EAAL,CACGK,IADH,CACQ,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADhB,EAEGF,IAFH,CAEQ,UAAAN,cAAc;AAAA,eAAI,MAAI,CAACS,QAAL,CAAc;AAACT,UAAAA,cAAc,EAAdA;AAAD,SAAd,CAAJ;AAAA,OAFtB,EAGGU,KAHH,CAGS,UAAAC,CAAC;AAAA,eAAIA,CAAJ;AAAA,OAHV;AAID;;;sCAEkB;AAAA,UACVC,GADU,GACH,KAAKb,KAAL,CAAWC,cADR,CACVY,GADU;AAGjB,aAAO;AACLC,QAAAA,MAAM,EAAE3B,CAAC,CAAC4B,GAAF,CAAM5B,CAAC,CAAC6B,IAAF,CAAOH,GAAP,CAAN,EAAmB,UAAAI,IAAI;AAAA,iBAAI3B,MAAM,CAAC2B,IAAD,CAAN,CAAaC,MAAb,CAAoB,IAApB,CAAJ;AAAA,SAAvB,CADH;AAELC,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,SADT;AAEEC,UAAAA,IAAI,EAAE,IAFR;AAGEC,UAAAA,WAAW,EAAE,GAHf;AAIEC,UAAAA,eAAe,EAAE,sBAJnB;AAKEC,UAAAA,WAAW,EAAE,oBALf;AAMEC,UAAAA,cAAc,EAAE,MANlB;AAOEC,UAAAA,UAAU,EAAE,EAPd;AAQEC,UAAAA,gBAAgB,EAAE,GARpB;AASEC,UAAAA,eAAe,EAAE,OATnB;AAUEC,UAAAA,gBAAgB,EAAE,oBAVpB;AAWEC,UAAAA,oBAAoB,EAAE,MAXxB;AAYEC,UAAAA,gBAAgB,EAAE,CAZpB;AAaEC,UAAAA,gBAAgB,EAAE,CAbpB;AAcEC,UAAAA,yBAAyB,EAAE,oBAd7B;AAeEC,UAAAA,qBAAqB,EAAE,qBAfzB;AAgBEC,UAAAA,qBAAqB,EAAE,CAhBzB;AAiBEC,UAAAA,WAAW,EAAE,CAjBf;AAkBEC,UAAAA,cAAc,EAAE,EAlBlB;AAmBEC,UAAAA,IAAI,EAAEnD,CAAC,CAACoD,MAAF,CAAS1B,GAAT;AAnBR,SADQ;AAFL,OAAP;AA0BD;;;gCAEYX,Q,EAAU;AACrB,WAAKQ,QAAL,CAAc;AAACR,QAAAA,QAAQ,EAARA;AAAD,OAAd,EAA0B,KAAKG,cAA/B;AACD;;;qCAEiBO,C,EAAG;AACnB,WAAK4B,WAAL,CAAiB5B,CAAC,CAAC6B,MAAF,CAASC,KAA1B;AACD;;;6BAEQ;AAAA;;AACP,UAAI,KAAK1C,KAAL,CAAWC,cAAf,EAA+B;AAC7B,eACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAGE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAM,UAAA,KAAK,EAAE;AAAC0C,YAAAA,QAAQ,EAAE,EAAX;AAAeC,YAAAA,UAAU,EAAE;AAA3B,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,EAEE;AAAQ,UAAA,KAAK,EAAE,KAAK5C,KAAL,CAAWE,QAA1B;AAAoC,UAAA,QAAQ,EAAE,KAAKC,gBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGZ,UAAU,CAACwB,GAAX,CAAe,UAAC8B,GAAD,EAAMC,KAAN;AAAA,iBACd;AAAQ,YAAA,GAAG,YAAKA,KAAL,cAAcD,GAAG,CAACE,OAAlB,CAAX;AAAwC,YAAA,KAAK,EAAEF,GAAG,CAAC3C,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA+D2C,GAAG,CAAC3C,QAAnE,MADc;AAAA,SAAf,CADH,CAFF,EAQI,KAAKF,KAAL,CAAWE,QAAX,KAAwB,KAAxB,IAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAChC;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,SAAS,EAAC,MAAtB;AAA6B,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACsC,WAAL,CAAiB,KAAjB,CAAN;AAAA,WAAtC;AAAqE,UAAA,KAAK,EAAE;AAACQ,YAAAA,KAAK,EAAE,OAAR;AAAiBL,YAAAA,QAAQ,EAAE,EAA3B;AAA+BC,YAAAA,UAAU,EAAE;AAA3C,WAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADgC,CARtC,CAHF,EAiBE;AAAK,UAAA,KAAK,EAAE;AAACK,YAAAA,SAAS,EAAE;AAAZ,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAE,KAAKC,eAAL,EAAZ;AAAoC,UAAA,MAAM,EAAE,GAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAjBF,CADF;AAuBD;;AAED,aAAO,IAAP;AACD;;;;EA1FejE,S;;AA6FlB,eAAeS,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Header from './components/Header';\nimport './App.css';\nimport _ from 'lodash';\nimport { Line, Chart } from 'react-chartjs-2';\nimport moment from 'moment';\nimport currencies from './supported-currencies.json';\n\nconsole.log(currencies)\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n\n    // chart.js defaults\n    Chart.defaults.global.defaultFontColor = '#000';\n    Chart.defaults.global.defaultFontSize = 16;\n\n    this.state = {historicalData: null, currency: \"PHP\"}\n    this.onCurrencySelect = this.onCurrencySelect.bind(this)\n  }\n\n  componentDidMount () {\n    this.getBitcoinData()\n  }\n\n  getBitcoinData () {\n    fetch(`https://api.coindesk.com/v1/bpi/historical/close.json?currency=${this.state.currency}`)\n      .then(response => response.json())\n      .then(historicalData => this.setState({historicalData}))\n      .catch(e => e)\n  }\n\n  formatChartData () {\n    const {bpi} = this.state.historicalData\n\n    return {\n      labels: _.map(_.keys(bpi), date => moment(date).format(\"ll\")),\n      datasets: [\n        {\n          label: \"Bitcoin\",\n          fill: true,\n          lineTension: 0.1,\n          backgroundColor: 'rgba(75,192,192,0.4)',\n          borderColor: 'rgba(75,192,192,1)',\n          borderCapStyle: 'butt',\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: 'miter',\n          pointBorderColor: 'rgba(75,192,192,1)',\n          pointBackgroundColor: '#fff',\n          pointBorderWidth: 1,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n          pointHoverBorderColor: 'rgba(220,220,220,1)',\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: _.values(bpi)\n        }\n      ]\n    }\n  }\n\n  setCurrency (currency) {\n    this.setState({currency}, this.getBitcoinData)\n  }\n\n  onCurrencySelect (e) {\n    this.setCurrency(e.target.value)\n  }\n\n  render() {\n    if (this.state.historicalData) {\n      return (\n        <div className=\"app\">\n          <Header title=\"BITCOIN PRICE INDEX\" />\n\n          <div className=\"select-container\">\n            <span style={{fontSize: 18, fontFamily: 'Bungee'}}> Select your currency: </span>\n            <select value={this.state.currency} onChange={this.onCurrencySelect}>\n              {currencies.map((obj, index) =>\n                <option key={`${index}-${obj.country}`} value={obj.currency}> {obj.currency} </option>\n              )}\n            </select>\n            {\n              this.state.currency !== 'PHP' && (<div>\n                <a href=\"#\" className=\"link\" onClick={() => this.setCurrency('PHP')} style={{color: \"black\", fontSize: 16, fontFamily: 'Bungee'}}> [CLICK HERE TO RESET] </a>\n              </div>)\n            }\n          </div>\n\n          <div style={{marginTop: 10}}>\n            <Line data={this.formatChartData()} height={250} />\n          </div>\n        </div>\n      )\n    }\n\n    return null\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}